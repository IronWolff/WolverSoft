//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WS.ShowCase.ApplicationService.ProductSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://www.wolversoft.com/ShowCase/Model/Brand/20131120")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.BrandFilter))]
    public partial class Brand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedByUserId {
            get {
                return this.ModifiedByUserIdField;
            }
            set {
                if ((this.ModifiedByUserIdField.Equals(value) != true)) {
                    this.ModifiedByUserIdField = value;
                    this.RaisePropertyChanged("ModifiedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrandFilter", Namespace="http://www.wolversoft.com/ShowCase/Model/BrandFilter/20131120")]
    [System.SerializableAttribute()]
    public partial class BrandFilter : WS.ShowCase.ApplicationService.ProductSvc.Brand {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeInactiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeInactive {
            get {
                return this.IncludeInactiveField;
            }
            set {
                if ((this.IncludeInactiveField.Equals(value) != true)) {
                    this.IncludeInactiveField = value;
                    this.RaisePropertyChanged("IncludeInactive");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetail {
            get {
                return this.ErrorDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailField, value) != true)) {
                    this.ErrorDetailField = value;
                    this.RaisePropertyChanged("ErrorDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://www.wolversoft.com/ShowCase/Model/Category/20131120")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.CategoryFilter))]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedByUserId {
            get {
                return this.ModifiedByUserIdField;
            }
            set {
                if ((this.ModifiedByUserIdField.Equals(value) != true)) {
                    this.ModifiedByUserIdField = value;
                    this.RaisePropertyChanged("ModifiedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryFilter", Namespace="http://www.wolversoft.com/ShowCase/Model/CategoryFilter/20131120")]
    [System.SerializableAttribute()]
    public partial class CategoryFilter : WS.ShowCase.ApplicationService.ProductSvc.Category {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeInactiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeInactive {
            get {
                return this.IncludeInactiveField;
            }
            set {
                if ((this.IncludeInactiveField.Equals(value) != true)) {
                    this.IncludeInactiveField = value;
                    this.RaisePropertyChanged("IncludeInactive");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://www.wolversoft.com/ShowCase/Model/Product/20131120")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ProductFilter))]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedByUserId {
            get {
                return this.ModifiedByUserIdField;
            }
            set {
                if ((this.ModifiedByUserIdField.Equals(value) != true)) {
                    this.ModifiedByUserIdField = value;
                    this.RaisePropertyChanged("ModifiedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductFilter", Namespace="http://www.wolversoft.com/ShowCase/Model/ProductFilter/20131120")]
    [System.SerializableAttribute()]
    public partial class ProductFilter : WS.ShowCase.ApplicationService.ProductSvc.Product {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeInactiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeInactive {
            get {
                return this.IncludeInactiveField;
            }
            set {
                if ((this.IncludeInactiveField.Equals(value) != true)) {
                    this.IncludeInactiveField = value;
                    this.RaisePropertyChanged("IncludeInactive");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Provider", Namespace="http://www.wolversoft.com/ShowCase/Model/Provider/20131120")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ProviderFilter))]
    public partial class Provider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedByUserId {
            get {
                return this.ModifiedByUserIdField;
            }
            set {
                if ((this.ModifiedByUserIdField.Equals(value) != true)) {
                    this.ModifiedByUserIdField = value;
                    this.RaisePropertyChanged("ModifiedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerFirstName {
            get {
                return this.OwnerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerFirstNameField, value) != true)) {
                    this.OwnerFirstNameField = value;
                    this.RaisePropertyChanged("OwnerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerLastName {
            get {
                return this.OwnerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerLastNameField, value) != true)) {
                    this.OwnerLastNameField = value;
                    this.RaisePropertyChanged("OwnerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderFilter", Namespace="http://www.wolversoft.com/ShowCase/Model/ProviderFilter/20131120")]
    [System.SerializableAttribute()]
    public partial class ProviderFilter : WS.ShowCase.ApplicationService.ProductSvc.Provider {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeInactiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeInactive {
            get {
                return this.IncludeInactiveField;
            }
            set {
                if ((this.IncludeInactiveField.Equals(value) != true)) {
                    this.IncludeInactiveField = value;
                    this.RaisePropertyChanged("IncludeInactive");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.wolversoft.com/ShowCase/IProductService/230132111", ConfigurationName="ProductSvc.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtBrand", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtBrandServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        int InsertBrand(WS.ShowCase.ApplicationService.ProductSvc.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teBrand", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teBrandServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        void UpdateBrand(WS.ShowCase.ApplicationService.ProductSvc.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredBrands", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredBrandsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredBrandsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Brand> GetFilteredBrands(WS.ShowCase.ApplicationService.ProductSvc.BrandFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtCategory", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtCategoryServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        int InsertCategory(WS.ShowCase.ApplicationService.ProductSvc.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teCategory", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teCategoryServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        void UpdateCategory(WS.ShowCase.ApplicationService.ProductSvc.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredCategories", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredCategoriesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Category> GetFilteredCategories(WS.ShowCase.ApplicationService.ProductSvc.CategoryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtProduct", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtProductServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        int InsertProduct(WS.ShowCase.ApplicationService.ProductSvc.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teProduct", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teProductServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        void UpdateProduct(WS.ShowCase.ApplicationService.ProductSvc.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredProducts", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredProductsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredProductsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Product> GetFilteredProducts(WS.ShowCase.ApplicationService.ProductSvc.ProductFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtProvider", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtProviderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Inse" +
            "rtProviderServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        int InsertProvider(WS.ShowCase.ApplicationService.ProductSvc.Provider provider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teProvider", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teProviderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/Upda" +
            "teProviderServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        void UpdateProvider(WS.ShowCase.ApplicationService.ProductSvc.Provider provider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredProviders", ReplyAction="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredProvidersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WS.ShowCase.ApplicationService.ProductSvc.ServiceFault), Action="http://www.wolversoft.com/ShowCase/IProductService/230132111/IProductService/GetF" +
            "ilteredProvidersServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/WS.ShowCase.Model.Models")]
        System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Provider> GetFilteredProviders(WS.ShowCase.ApplicationService.ProductSvc.ProviderFilter filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : WS.ShowCase.ApplicationService.ProductSvc.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<WS.ShowCase.ApplicationService.ProductSvc.IProductService>, WS.ShowCase.ApplicationService.ProductSvc.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertBrand(WS.ShowCase.ApplicationService.ProductSvc.Brand brand) {
            return base.Channel.InsertBrand(brand);
        }
        
        public void UpdateBrand(WS.ShowCase.ApplicationService.ProductSvc.Brand brand) {
            base.Channel.UpdateBrand(brand);
        }
        
        public System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Brand> GetFilteredBrands(WS.ShowCase.ApplicationService.ProductSvc.BrandFilter filter) {
            return base.Channel.GetFilteredBrands(filter);
        }
        
        public int InsertCategory(WS.ShowCase.ApplicationService.ProductSvc.Category category) {
            return base.Channel.InsertCategory(category);
        }
        
        public void UpdateCategory(WS.ShowCase.ApplicationService.ProductSvc.Category category) {
            base.Channel.UpdateCategory(category);
        }
        
        public System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Category> GetFilteredCategories(WS.ShowCase.ApplicationService.ProductSvc.CategoryFilter filter) {
            return base.Channel.GetFilteredCategories(filter);
        }
        
        public int InsertProduct(WS.ShowCase.ApplicationService.ProductSvc.Product product) {
            return base.Channel.InsertProduct(product);
        }
        
        public void UpdateProduct(WS.ShowCase.ApplicationService.ProductSvc.Product product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Product> GetFilteredProducts(WS.ShowCase.ApplicationService.ProductSvc.ProductFilter filter) {
            return base.Channel.GetFilteredProducts(filter);
        }
        
        public int InsertProvider(WS.ShowCase.ApplicationService.ProductSvc.Provider provider) {
            return base.Channel.InsertProvider(provider);
        }
        
        public void UpdateProvider(WS.ShowCase.ApplicationService.ProductSvc.Provider provider) {
            base.Channel.UpdateProvider(provider);
        }
        
        public System.Collections.Generic.List<WS.ShowCase.ApplicationService.ProductSvc.Provider> GetFilteredProviders(WS.ShowCase.ApplicationService.ProductSvc.ProviderFilter filter) {
            return base.Channel.GetFilteredProviders(filter);
        }
    }
}
